метод Скрипт()
    // Создаем граф
    знч Граф = <Строка, Массив<Строка>>{
        "A": ["B", "C"],
        "B": ["D", "E"],
        "C": ["F", "G"],
        "D": <Строка>[],
        "E": ["H"],
        "F": <Строка>[],
        "G": ["I"],
        "H": <Строка>[],
        "I": <Строка>[]
    }

    // Запускаем BFS из A в F
    ПоискВШирину(Граф, "A", "F")
;

метод ПоискВШирину(Граф: Соответствие<Строка, Массив<Строка>>, Начало: Строка, Цель: Строка)
    // Множество посещённых узлов
    знч Посещенные = новый Множество<Строка>()

    // Очередь (FIFO)
    знч Очередь = новый Массив<Строка>()
    Очередь.Добавить(Начало)

    // Пока очередь не пуста
    пока Очередь.Размер() > 0
        // Берем первый элемент из очереди
        знч Текущий = Очередь[0]
        Очередь.УдалитьПоИндексу(0)

        // Если уже посещали — пропускаем
        если Посещенные.Содержит(Текущий) 
            продолжить
        ;

        // Отмечаем как посещённый
        Посещенные.Добавить(Текущий)

        // Выводим шаг
        Консоль.Записать("Посещаем: %Текущий")

        // Проверяем, нашли ли цель
        если Текущий == Цель 
            Консоль.Записать("Найден узел: " + Цель)
            возврат
        ;

        // Добавляем всех непосещённых соседей в очередь
        для Сосед из Граф[Текущий]
            если не Посещенные.Содержит(Сосед)
                Очередь.Добавить(Сосед)
            ;
        ;
    ;

    Консоль.Записать("Узел %Цель не найден")
;
